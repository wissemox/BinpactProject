# Generated by Django 3.1.12 on 2021-06-29 10:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gestionDeProduits', '0015_auto_20210607_1345'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Offre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bynz', models.FloatField()),
                ('status', models.CharField(choices=[('accepted', 'ACCEPTED'), ('refused', 'REFUSED'), ('pending', 'PENDING'), ('under negotiation', 'UNDER NEGOTIATION')], default='pending', max_length=45)),
                ('type_troc', models.CharField(choices=[('produits contre produits', 'PRODUITS CONTRE PRODUITS'), ('produits contre bynz', 'PRODUITS CONTRE BYNZ'), ('produits contre produits + bynz', 'PRODUITS CONTRE PRODUITS + BYNZ'), ('produits + bynz contre produits', 'PRODUITS + BYNZ CONTRE PRODUITS')], default='produits contre produits', max_length=100)),
                ('offre_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offre_owner', to=settings.AUTH_USER_MODEL)),
                ('offre_receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offre_receiver', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OffreProduit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offres.offre')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionDeProduits.produit')),
            ],
        ),
        migrations.AddField(
            model_name='offre',
            name='produits',
            field=models.ManyToManyField(through='offres.OffreProduit', to='gestionDeProduits.Produit'),
        ),
    ]
